[tool:pytest]
# Pytest configuration for AlphaPT sophisticated testing infrastructure

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test markers
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions
    contract: Contract tests for component interfaces and API contracts
    performance: Performance and load testing
    fault_tolerance: Fault tolerance and resilience testing
    e2e: End-to-end workflow tests
    slow: Long-running tests (> 30 seconds)
    benchmark: Performance benchmark tests
    smoke: Quick smoke tests for basic functionality
    mock_feed: Tests requiring mock market feed
    live_feed: Tests requiring live Zerodha feed
    feed_comparison: Tests comparing both feed types
    production: Tests validating production readiness
    market_hours: Tests requiring active market hours

# Output configuration
addopts = 
    -v
    --strict-markers
    --tb=short
    --disable-warnings
    --color=yes
    --durations=10
    --maxfail=5

# Coverage configuration
# (Note: Coverage settings are also in pyproject.toml)

# Test environment
env =
    TESTING = true
    ENVIRONMENT = testing
    MOCK_MARKET_FEED = true
    SKIP_TOKEN_VALIDATION = true

# Timeout configuration
timeout = 300

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Asyncio configuration
asyncio_mode = auto

# Filter warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning:pydantic.*
    ignore::RuntimeWarning:asyncio.*